## pass -DMATCH_BAYES_TREE to get same results as BayesTree, including excess random calls
MATCH_BAYES_TREE=@match_bayes_tree@
THREAD_SAFE_UNLOAD=@thread_safe_unload@

INST_DIR=../inst

PKG_CPPFLAGS=-I$(INST_DIR)/include -Iinclude @PTHREAD_CFLAGS@ $(THREAD_SAFE_UNLOAD)
PKG_CPPXXFLAGS=-I$(INST_DIR)/include -Iinclude @PTHREAD_CFLAGS@ $(THREAD_SAFE_UNLOAD)
PKG_LIBS=$(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) dbarts/libdbarts.a external/libexternal.a @PTHREAD_LIBS@ 

.PHONY: all dbarts/libdbarts.a external/libexternal.a clean

all: $(SHLIB)

$(SHLIB): dbarts/libdbarts.a external/libexternal.a

dbarts/libdbarts.a:
	@(cd dbarts && $(MAKE) libdbarts.a \
	  CXX="$(CXX)" R_XTRA_CPPFLAGS="$(R_XTRA_CPPFLAGS)" \
	  CPPFLAGS="@PTHREAD_CFLAGS@ $(CPPFLAGS) $(MATCH_BAYES_TREE)" \
	  CXXFLAGS="$(R_XTRA_CXXFLAGS) $(CXXPICFLAGS) $(CXXFLAGS)" \
	  AR="$(AR)" ARFLAGS="$(ARFLAGS)" RANLIB="$(RANLIB)" \
	  INST_DIR="$(INST_DIR)")


external/libexternal.a :
	@(cd external && $(MAKE) libexternal.a \
	  CC="$(CC)" R_XTRA_CPPFLAGS="$(R_XTRA_CPPFLAGS)" \
	  CPPFLAGS="@PTHREAD_CFLAGS@ $(CPPFLAGS)" \
	  CFLAGS="$(R_XTRA_CFLAGS) $(CPICFLAGS) $(CFLAGS)" \
	  AR="$(AR)" ARFLAGS="$(ARFLAGS)" RANLIB="$(RANLIB)" \
	  INST_DIR="$(INST_DIR)")


clean :
	@(cd dbarts && $(MAKE) clean)
	@(cd external && $(MAKE) clean)
	rm -f *.so *.dll *.o
